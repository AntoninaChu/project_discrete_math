# This program prints adjacency matrix of oriented graphs.


def receive(big_list):
    '''(list)->(list)
    This function returns a list of lists in which the vertices of the graph
    are written.
    '''
    graph = input()
    if graph == '':
        return 0
    list_in_list = []
    edge = ''
    for i in range(len(graph)):
        if graph[i].isdigit():
            edge += graph[i]
        if (graph[i].isdigit() is False and graph[i-1].isdigit()) or i == len(graph)-1:
            list_in_list.append(int(edge))
            edge = ''
    big_list.append(list_in_list)
    return big_list


def number_edges(big_list):
    '''(list)->(int)
    This function returns the largest number from the list of lists.
    >>> number_edges([[1, 3], [4, 73], [2, 8]])
    73
    >>> number_edges([[3, 6], [7, 2], [5, 23]])
    23
    >>> number_edges([[2, 6], [4, 6], [3, 9]])
    9
    '''
    maxx = 0
    for lists in big_list:
        for edge in lists:
            if edge > maxx:
                maxx = edge
    return maxx


def clean_mtrx(number):
    '''(int)->(list)
    This function returns a list of lists of a certain length.
    >>> clean_mtrx(3)
    [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
    >>> clean_mtrx(2)
    [[0, 0], [0, 0]]
    '''
    mtrx = [[0 for i in range(number)] for j in range(number)]
    return mtrx


def change_mtrx(mtrx, big_list):
    '''(list), (list) -> (list)
    This function returns a list of lists that depicts the graph matrix.
    >>> change_mtrx([[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[1, 2], [2, 3]])
    [[0, 1, 0], [0, 0, 1], [0, 0, 0]]
    >>> change_mtrx([[0, 0], [0, 0]], [[1, 2], [1, 1]])
    [[1, 1], [0, 0]]
    '''
    for list_in_list in big_list:
        mtrx[list_in_list[0]-1][list_in_list[1]-1] = 1
    return mtrx


def main():
    big_list = []
    while receive(big_list) != 0:
        receive(big_list)
    maxx = number_edges(big_list)
    mtrx = clean_mtrx(maxx)
    new_mtrx = change_mtrx(mtrx, big_list)
    for line in new_mtrx:
        print(line)
main()


if __name__ == "__main__":
   import doctest
   print(doctest.testmod())
